/*! future - v0.0.1 - 2012-10-12
* http://github.com/MarkBennett/future-js
* Copyright (c) 2012 Mark Bennett; Licensed MIT */
(function(){var e;typeof exports!="undefined"?e=exports:(this.future={},e=this.future),e.VERSION="0.0.1",e.Completer=function(){function o(){this.then=function(e){switch(n){case t.INCOMPLETE:i.push(e);break;case t.COMPLETED:e.apply(this,r);break;case t.COMPLETED_WITH_EXCEPTION:}return this},this.handleException=function(e){return n===t.INCOMPLETE&&s.push(e),this}}var e,t={INCOMPLETE:1,COMPLETED:2,COMPLETED_WITH_EXCEPTION:3},n=t.INCOMPLETE,r,i=[],s=[];this.future=function(){return e=e||new o,e},this.complete=function(){var e;switch(n){case t.INCOMPLETE:n=t.COMPLETED,r=Array.prototype.slice.call(arguments,0);for(e=0;e<i.length;e++)i[e].apply(this.future(),r);break;case t.COMPLETED:throw new Error("Already completed. Cannot complete again.");case t.COMPLETED_WITH_EXCEPTION:throw new Error("Already completed with exception. Cannot complete again.")}return this},this.completeException=function(){var e;switch(n){case t.INCOMPLETE:n=t.COMPLETED_WITH_EXCEPTION;for(e=0;e<s.length;e++)s[e].apply(this.future(),arguments);break;case t.COMPLETED:throw new Error("Already completed. Cannot complete with exception.");case t.COMPLETED_WITH_EXCEPTION:throw new Error("Already completed with exception. Cannot complete again.")}return this}}}).call(this);